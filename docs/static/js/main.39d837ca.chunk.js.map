{"version":3,"sources":["XandO.js","App.js","index.js"],"names":["XandO","props","className","spanClass","onClick","index","state","clearType","App","useState","type","setType","typeChanged","setTypeChanged","gameWinnerIs","setGameWinnerIs","drawCount","setDrawCount","onTypeClicked","strings","Array","from","clearGame","useEffect","winner","gameWinner","lines","i","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"kLAYeA,EAVD,SAACC,GAEX,OACI,sBAAMC,UAAWD,EAAME,UACvBC,QAAS,kBAAMH,EAAMG,QAAQH,EAAMI,QADnC,SAEKJ,EAAMK,SCDbC,EAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAqHxCC,EAlHH,WAEV,MAAwBC,mBAASF,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAkCN,mBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAOMC,EAAgB,SAACb,GACrB,IAAIc,EAAUC,MAAMC,KAAKX,GACrBS,EAAQd,KAEZc,EAAQd,GAASO,EAAc,IAAM,IACrCC,GAAgBD,GAChBD,EAAQQ,KAING,EAAY,WAChBX,EAAQJ,GACRQ,EAAgB,IAChBE,EAAa,IAKfM,qBAAU,WACR,IAAIC,EAASC,IACTD,GACAF,IACY,MAATE,GACDT,EAAgB,6BAChBE,EAAa,IAEE,MAATO,IACNT,EAAgB,6BAChBE,EAAa,KAIF,IAAZD,IACDD,EAAgB,4BAChBE,EAAa,MAIhB,CAACP,IAEJ,IAAMe,EAAa,WAYjB,IAXA,IAAMC,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGFC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACnC,kBAAkBD,EAAMC,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIrB,EAAKmB,IAAMnB,EAAKmB,KAAOnB,EAAKoB,IAAMpB,EAAKmB,KAAOnB,EAAKqB,GACnD,OAAOrB,EAAKmB,GAIpB,OADAZ,EAAaD,EAAU,GAChB,MAIP,OACE,sBAAKd,UAAU,cAAf,UAEE,qBAAKA,UAAU,kBAAf,8BAGA,sBAAKA,UAAU,cAAf,UACE,cAAC,EAAD,CAAOC,UAAU,eAAeG,MAAOI,EAAK,GAAIN,QAAS,kBAAMc,EAAc,MAC7E,cAAC,EAAD,CAAOf,UAAU,eAAeG,MAAOI,EAAK,GAAIN,QAAS,kBAAMc,EAAc,MAC7E,cAAC,EAAD,CAAOf,UAAU,eAAeG,MAAOI,EAAK,GAAIN,QAAS,kBAAMc,EAAc,SAI/E,sBAAKhB,UAAU,cAAf,UACE,cAAC,EAAD,CAAOC,UAAU,eAAeG,MAAOI,EAAK,GAAIN,QAAS,kBAAMc,EAAc,MAC7E,cAAC,EAAD,CAAOf,UAAU,eAAeG,MAAOI,EAAK,GAAIN,QAAS,kBAAMc,EAAc,MAC7E,cAAC,EAAD,CAAOf,UAAU,eAAeG,MAAOI,EAAK,GAAIN,QAAS,kBAAMc,EAAc,SAI/E,sBAAKhB,UAAU,cAAf,UACE,cAAC,EAAD,CAAOC,UAAU,eAAeG,MAAOI,EAAK,GAAIN,QAAS,kBAAMc,EAAc,MAC7E,cAAC,EAAD,CAAOf,UAAU,eAAeG,MAAOI,EAAK,GAAIN,QAAS,kBAAMc,EAAc,MAC7E,cAAC,EAAD,CAAOf,UAAU,eAAeG,MAAOI,EAAK,GAAIN,QAAS,kBAAMc,EAAc,SAK/E,wBAAQhB,UAAU,SAASE,QAASkB,EAApC,sBAEA,qBAAKpB,UAAU,iBAAf,SACGY,QC9GTkB,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,U","file":"static/js/main.39d837ca.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst XandO = (props) => {\r\n\r\n    return (\r\n        <span className={props.spanClass}\r\n        onClick={() => props.onClick(props.index)}>\r\n            {props.state}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default XandO","import React  from \"react\";\nimport { useState, useEffect } from \"react\";\nimport XandO from \"./XandO\"\n\n\n\nconst clearType = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n\n\nconst App = () => {\n\n  const [type, setType] = useState(clearType)\n  const [typeChanged, setTypeChanged] = useState(false)\n  const [gameWinnerIs, setGameWinnerIs] = useState(\"\")\n  const [drawCount, setDrawCount] = useState(0)\n\n\n\n\n\n\n  const onTypeClicked = (index) => {\n    let strings = Array.from(type);\n    if (strings[index])\n        return;\n    strings[index] = typeChanged ? \"X\" : \"0\";\n    setTypeChanged(!typeChanged)\n    setType(strings)\n}\n\n\nconst clearGame = () => {\n  setType(clearType)\n  setGameWinnerIs(\"\")\n  setDrawCount(0)\n\n}\n\n\nuseEffect(() => {\n  let winner = gameWinner();\n  if (winner) {\n      clearGame();\n      if(winner===\"X\"){\n        setGameWinnerIs((`Player \"X\" won the Game !`))\n        setDrawCount(0)\n      }\n      else if(winner===\"0\"){\n        setGameWinnerIs((`Player \"0\" won the Game !`))\n        setDrawCount(0)\n      }\n  }\n  else{\n    if(drawCount===9){\n      setGameWinnerIs((`Ooops ! The Game is Tied`))\n      setDrawCount(0)\n    }\n  }\n\n}, [type])\n\nconst gameWinner = () => {\n  const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (type[a] && type[a] === type[b] && type[a] === type[c]) {\n          return type[a];\n      }\n  }\n  setDrawCount(drawCount+1)\n  return null;\n}\n\n\n  return(\n    <div className=\"app-styling\">\n\n      <div className=\"heading-styling\">TIC-TAC-TOE GAME</div>\n\n\n      <div className=\"row-styling\">\n        <XandO spanClass=\"span-styling\" state={type[0]} onClick={() => onTypeClicked(0)}/>\n        <XandO spanClass=\"span-styling\" state={type[1]} onClick={() => onTypeClicked(1)}/>\n        <XandO spanClass=\"span-styling\" state={type[2]} onClick={() => onTypeClicked(2)}/>\n      </div>\n\n\n      <div className=\"row-styling\">\n        <XandO spanClass=\"span-styling\" state={type[3]} onClick={() => onTypeClicked(3)}/>\n        <XandO spanClass=\"span-styling\" state={type[4]} onClick={() => onTypeClicked(4)}/>\n        <XandO spanClass=\"span-styling\" state={type[5]} onClick={() => onTypeClicked(5)}/>\n      </div>\n\n\n      <div className=\"row-styling\">\n        <XandO spanClass=\"span-styling\" state={type[6]} onClick={() => onTypeClicked(6)}/>\n        <XandO spanClass=\"span-styling\" state={type[7]} onClick={() => onTypeClicked(7)}/>\n        <XandO spanClass=\"span-styling\" state={type[8]} onClick={() => onTypeClicked(8)}/>\n      </div>\n\n\n\n      <button className=\"button\" onClick={clearGame}>New Game</button>\n\n      <div className=\"winner-styling\">\n        {gameWinnerIs}\n      </div>\n\n\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}